<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--DispatchServlet-->
    <!--
    DispatcherServlet是前置控制器，配置在web.xml文件中的。
    拦截匹配的请求，Servlet拦截匹配规则要自己定义，把拦截下来的请求，
    依据相应的规则分发到目标Controller来处理，是配置spring MVC的第一步。
    -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <!--contextConfigLocation:上下文配置路径，固定值-->
            <param-name>contextConfigLocation</param-name>
            <!--这里需要加载总的配置文件-->
            <!--classpath:类路径，值得是Java和resources文件夹-->
            <!--springmvc.xml:指的是配置文件的名称：需要配置springmvc.xml，在下面-->
            <!--也就是说写成springmvc.xml，但是会丢失一些bean，所以加载总配置文件-->
            <param-value>classpath:applicationContext.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--乱码过滤-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--Session过期时间-->
    <session-config>
        <session-timeout>15</session-timeout>
    </session-config>
</web-app>